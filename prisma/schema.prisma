generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clientes {
  id                       Int             @id @default(autoincrement())
  nombre                   String          @db.VarChar(50)
  ruc                      String          @unique @db.VarChar(11)
  email                    String          @db.VarChar(100)
  telefono                 String          @db.VarChar(15)
  fecha_creacion_empresa   DateTime?       @db.Date
  estado_auditoria         String          @default("1") @db.Char(1)
  fecha_creacion_auditoria DateTime        @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime        @default(now()) @db.Timestamp(6)
  contactos                contactos[]
  interacciones            interacciones[]
  oportunidades            oportunidades[]
  tareas                   tareas[]
}

model contactos {
  id                       Int             @id @default(autoincrement())
  cliente_id               Int
  nombre                   String          @db.VarChar(50)
  apellidos                String          @db.VarChar(50)
  tipo_documento_id        Int
  num_documento            String          @unique @db.VarChar(20)
  cargo                    String          @db.VarChar(50)
  email                    String          @db.VarChar(100)
  telefono                 String?         @db.VarChar(15)
  estado_auditoria         String          @default("1") @db.Char(1)
  fecha_creacion_auditoria DateTime        @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime        @default(now()) @db.Timestamp(6)
  clientes                 clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tipo_documentos          tipo_documentos @relation(fields: [tipo_documento_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model interacciones {
  id                       Int       @id @default(autoincrement())
  cliente_id               Int
  fecha                    DateTime? @db.Date
  tipo                     String    @db.VarChar(20)
  descripcion              String?
  estado_auditoria         String    @default("1") @db.Char(1)
  fecha_creacion_auditoria DateTime  @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime  @default(now()) @db.Timestamp(6)
  clientes                 clientes  @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model oportunidades {
  id                       Int       @id @default(autoincrement())
  cliente_id               Int
  usuario_id               Int
  titulo                   String    @db.VarChar(100)
  descripcion              String?
  monto_estimado           Decimal?  @db.Decimal(12, 2)
  estado                   String    @db.VarChar(20)
  fecha_cierre_estimada    DateTime? @db.Date
  estado_auditoria         String    @default("1") @db.Char(1)
  fecha_creacion_auditoria DateTime  @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime  @default(now()) @db.Timestamp(6)
  clientes                 clientes  @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarios                 usuarios  @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tareas {
  id                       Int       @id @default(autoincrement())
  cliente_id               Int
  titulo                   String    @db.VarChar(20)
  fecha_vencimiento        DateTime? @db.Date
  estado                   String    @db.VarChar(20)
  estado_auditoria         String    @default("1") @db.Char(1)
  fecha_creacion_auditoria DateTime  @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime  @default(now()) @db.Timestamp(6)
  clientes                 clientes  @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tipo_documentos {
  id                       Int         @id @default(autoincrement())
  nombre                   String      @unique @db.VarChar(50)
  estado_auditoria         String      @default("1") @db.Char(1)
  fecha_creacion_auditoria DateTime    @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime    @default(now()) @db.Timestamp(6)
  contactos                contactos[]
  usuarios                 usuarios[]
}

model usuariojwt {
  id                  Int       @id @default(autoincrement())
  username            String    @unique @db.VarChar(50)
  email               String    @unique @db.VarChar(100)
  ip_creacion         String?   @db.VarChar(45)
  password            String    @db.VarChar(255)
  estado_auditoria    String?   @default("1") @db.Char(1)
  fecha_creacion      DateTime? @default(now()) @db.Timestamptz(6)
  fecha_actualizacion DateTime? @default(now()) @db.Timestamptz(6)
}

model usuarios {
  id                       Int             @id @default(autoincrement())
  nombre                   String          @db.VarChar(50)
  apellidos                String          @db.VarChar(50)
  tipo_documento_id        Int
  num_documento            String          @unique @db.VarChar(20)
  email                    String          @db.VarChar(100)
  password                 String          @db.VarChar(100)
  estado_auditoria         String          @default("1") @db.Char(1)
  fecha_creacion_auditoria DateTime        @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime        @default(now()) @db.Timestamp(6)
  oportunidades            oportunidades[]
  tipo_documentos          tipo_documentos @relation(fields: [tipo_documento_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
